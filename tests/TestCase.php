<?php

namespace Tests;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\TestCase as BaseTestCase;
use Tymon\JWTAuth\Facades\JWTAuth;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication, RefreshDatabase;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->seedData();
    }

    protected function seedData()
    {
        $this->seed('DatabaseSeeder');
    }

    protected function setUpUser($password = null)
    {
        $password = $password ? $password : 'password';
        return User::factory()->create(['password' => $password]);
    }

    protected function makePost($route, $data, $token = null)
    {
        return $this->postJson($route, $data, $this->setUpHeader($token));
    }

    protected function makeGet($route, $token = null)
    {
        return $this->getJson($route, $this->setUpHeader($token));
    }

    protected function makeAuthGet($user, $route)
    {
        $token = JWTAuth::fromUser($user);
        return $this->makeGet($route, $token);
    }

    protected function makeAuthPost($user, $route, $data)
    {
        $token = JWTAuth::fromUser($user);
        return $this->makePost($route, $data, $token);
    }

    protected function setUpHeader($token = null)
    {
        $header = ['Accept' => 'application/json', 'Content-Type' => 'application/json'];
        if($token) {
            $header = array_merge($header, ['Authorization' => "Bearer {$token}"]);
        }
        return $header;
    }
}
